apiVersion: apps/v1 # For replicaser its apps/v1
kind: ReplicaSet
metadata:  # Under metadata, we will add name also add a few labels, app and type and assign values to them.
  name: myapp-development
  labels:
    app: myapp
    type: front-end
spec: # Spec section defines whatâ€™s inside the object we are creating.
  template: # Template section under spec to provide a POD template to be used by the replication controller to create replicas.
    metadata:
        name: myapp-pod
        labels:
          app: myapp
          type: front-end
    spec:
      containers:
       - name: nginx-controller
         image: nginx 
  replicas: 3 # Input the number of replicas. Template and replicas are direct children of the spec section.
  selector: # Selector section helps the replicaset identify what pods fall under it. Replica set can ALSO manage pods that were not created as part of the replicaset creation. Selector is one of the major differences between replication controller and replica set.
    matchLabels: # MatchLabels selector simply matches the labels specified under it to the labels on the PODs.
      type: front-end

#This is were labelling our PODs during creation comes in handy. We could now provide these labels as a filter for replicaset.
#Under the selector section we use the matchLabels filter and provide the same label that we used while creating the pods. 
#This way the replicaset knows which pods to monitor.

#In case one of the PODs were to fail in the future, the replicaset needs to create a new one to maintain the desired number of PODs. And for the replica set to 
#create a new POD, the template definition section IS required.